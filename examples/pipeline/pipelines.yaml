apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: golang-pipeline
spec:
  params:
  - name: contextDir
    description: the context dir within source
    default: simple-http-server
  - name: destinationImage
    description: the fully qualified image name
    default: "10.6.182.195:5000/tekton/demo/simple-http-server:latest"
  - name: dockerFile
    description: the docker file to used for building the application
    default: Dockerfile
  - name: tlsVerify
    description: tls verify
    type: string
    default: "false"
  - name: url
    default: https://gitlab.daocloud.cn/bing.ma/tekton-demo.git
  - name: revision
    default: master
  - name: subdirectory
    default: ""
  - name: sslVerify
    description: defines if http.sslVerify should be set to true or false in the global git config
    type: string
    default: "false"
  - name: storageDriver
    type: string
    description: Use storage driver type vfs if you are running on OpenShift.
    default: vfs
  workspaces:
  - name: source
  tasks:
  - name: golang-pipeline-build
    taskRef:
      name: build-app-golang
    params:
    - name: contextDir
      value: $(params.contextDir)
    - name: destinationImage
      value: $(params.destinationImage)
    - name: storageDriver
      value: $(params.storageDriver)
    - name: dockerFile
      value: $(params.dockerFile)
    - name: tlsVerify
      value: $(params.tlsVerify)
    - name: url
      value: $(params.url)
    - name: revision
      value: $(params.revision)
    - name: subdirectory
      value: $(params.subdirectory)
    - name: sslVerify
      value: $(params.sslVerify)
    workspaces:
    - name: source
      workspace: source
  - name: deploy-kubernetes-service
    taskRef:
      name: openshift-client
    runAfter:
      - golang-pipeline-build
    params:
    - name: SCRIPT
      value: |
        kubectl delete deployment simple-http-server
        kubectl delete svc simple-http-server
        kubectl create deployment simple-http-server --port=8080 --image=$(params.destinationImage)
        kubectl expose deployment/simple-http-server --port=8080 --target-port=8080 --type=NodePort

